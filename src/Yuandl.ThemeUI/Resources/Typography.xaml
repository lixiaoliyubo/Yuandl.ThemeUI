<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Yuandl ThemeUI. All Rights Reserved.
-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:assist="clr-namespace:Yuandl.ThemeUI.ElementAssist" 
    >
    <Style
        x:Key="CaptionTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="LineHeight" Value="16" />
        <Setter Property="FontWeight" Value="Regular" />
    </Style>

    <Style
        x:Key="BodyTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="LineHeight" Value="20" />
        <Setter Property="FontWeight" Value="Regular" />
    </Style>

    <Style
        x:Key="BodyStrongTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="LineHeight" Value="20" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style
        x:Key="SubtitleTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="LineHeight" Value="28" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style
        x:Key="TitleTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="LineHeight" Value="36" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style
        x:Key="TitleLargeTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="40" />
        <Setter Property="LineHeight" Value="52" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style
        x:Key="DisplayTextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="68" />
        <Setter Property="LineHeight" Value="92" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style TargetType="{x:Type assist:Ripple}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ClipToBounds" Value="{Binding RelativeSource={RelativeSource Self}, Path=(assist:RippleAssist.ClipToBounds)}" />
        <Setter Property="Feedback" Value="{Binding RelativeSource={RelativeSource Self}, Path=(assist:RippleAssist.Feedback)}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="RecognizesAccessKey" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type assist:Ripple}">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" To="MousePressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClickEllipse" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value=".26" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="MouseOut">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseIn" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClickEllipse" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.12" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="MousePressed" To="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <EasingDoubleKeyFrame x:Name="MousePressedToNormalScaleXKeyFrame"
                                              KeyTime="0:0:0.30"
                                              Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <EasingDoubleKeyFrame x:Name="MousePressedToNormalScaleYKeyFrame"
                                              KeyTime="0:0:0.30"
                                              Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClickEllipse" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value=".26" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value=".26" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleX"
                                     To="0" />
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleY"
                                     To="0" />
                                        <DoubleAnimation Storyboard.TargetName="ClickEllipse"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MousePressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleX"
                                     To="1" />
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleY"
                                     To="1" />
                                        <DoubleAnimation Storyboard.TargetName="ClickEllipse"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.26" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOut">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleX"
                                     To="0" />
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                     Storyboard.TargetProperty="ScaleY"
                                     To="0" />
                                        <DoubleAnimation Storyboard.TargetName="ClickEllipse"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    IsHitTestVisible="False">
                            <Ellipse x:Name="ClickEllipse"
                       Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleX}"
                       Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleY}"
                       Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleSize}"
                       Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RippleSize}"
                       Fill="{TemplateBinding Feedback}"
                       Opacity="0"
                       RenderTransformOrigin=".5,.5">
                                <Ellipse.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform x:Name="TranslateTransform" />
                                    </TransformGroup>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Canvas.Style>
                                <Style TargetType="Canvas">
                                    <Setter Property="ZIndex" Value="0" />
                                    <Style.Triggers>
                                        <Trigger Property="assist:RippleAssist.RippleOnTop" Value="True">
                                            <Setter Property="ZIndex" Value="2" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Canvas.Style>
                        </Canvas>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Panel.ZIndex="1"
                              Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                              RecognizesAccessKey="{TemplateBinding RecognizesAccessKey}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>
</ResourceDictionary>
