<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Yuandl ThemeUI. All Rights Reserved.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Yuandl.ThemeUI.Controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!--  TODO: Increase size on mouse over  -->

    <system:Double x:Key="RadioButtonBorderThemeThickness">1</system:Double>
    <system:Double x:Key="ToggleButtonWidth">40</system:Double>
    <system:Double x:Key="ToggleButtonHeight">20</system:Double>
    <Thickness x:Key="ToggleSwitchPadding">8,6,0,0</Thickness>
    <Thickness x:Key="ToggleSwitchBorderThemeThickness">1</Thickness>
    <Thickness x:Key="ToggleSwitchContentMargin">8,0,0,0</Thickness>

    <Style x:Key="DefaultUiToggleSwitchStyle" TargetType="{x:Type controls:ToggleSwitch}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource DefaultControlFocusVisualStyle}" />
        <Setter Property="Background" Value="{DynamicResource SystemAccentColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ControlTextColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ToggleSwitchBorderThemeThickness}" />
        <Setter Property="Padding" Value="{StaticResource ToggleSwitchPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ToggleSwitch}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid
                            Grid.Column="0"
                            Width="{StaticResource ToggleButtonWidth}"
                            Height="{StaticResource ToggleButtonHeight}">
                            <Rectangle
                                x:Name="ToggleRectangle"
                                Width="{StaticResource ToggleButtonWidth}"
                                Height="{StaticResource ToggleButtonHeight}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{DynamicResource ControlFillColorBrush}"
                                RadiusX="10"
                                RadiusY="10"
                                Stroke="{DynamicResource ControlBorderColorBrush}"
                                StrokeThickness="1" />
                            <Rectangle
                                x:Name="ActiveToggleRectangle"
                                Width="{StaticResource ToggleButtonWidth}"
                                Height="{StaticResource ToggleButtonHeight}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{DynamicResource SystemAccentColorBrush}"
                                Stroke="{DynamicResource ControlBorderColorBrush}"
                                Opacity="0.0"
                                RadiusX="10"
                                RadiusY="10"
                                StrokeThickness="0" />
                            <Ellipse
                                x:Name="ToggleEllipse"
                                Width="12"
                                Height="12"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{DynamicResource ControlTextSecondaryColorBrush}"
                                RenderTransformOrigin="0.5, 0.5">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="-9" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse
                                x:Name="ActiveToggleEllipse"
                                Width="12"
                                Height="12"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{DynamicResource ControlFillColorBrush}"
                                Opacity="1"
                                RenderTransformOrigin="0.5, 0.5">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="-9" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Grid.Column="1"
                            Margin="{StaticResource ToggleSwitchContentMargin}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                            <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="{x:Null}" />
                                <Condition Property="OnContent" Value="{x:Null}" />
                                <Condition Property="OffContent" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="" />
                                <Condition Property="OnContent" Value="" />
                                <Condition Property="OffContent" Value="" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ToggleRectangle"
                                            Storyboard.TargetProperty="(Rectangle.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ActiveToggleRectangle"
                                            Storyboard.TargetProperty="(Rectangle.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ToggleEllipse"
                                            Storyboard.TargetProperty="(Ellipse.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ActiveToggleEllipse"
                                            Storyboard.TargetProperty="(Ellipse.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ToggleEllipse"
                                            Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)"
                                            From="-9"
                                            To="9"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ActiveToggleEllipse"
                                            Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)"
                                            From="-9"
                                            To="9"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ToggleRectangle"
                                            Storyboard.TargetProperty="(Rectangle.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ActiveToggleRectangle"
                                            Storyboard.TargetProperty="(Rectangle.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ToggleEllipse"
                                            Storyboard.TargetProperty="(Ellipse.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ActiveToggleEllipse"
                                            Storyboard.TargetProperty="(Ellipse.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ToggleEllipse"
                                            Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)"
                                            From="9"
                                            To="-9"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ActiveToggleEllipse"
                                            Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)"
                                            From="9"
                                            To="-9"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="{x:Null}" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentPresenter" Property="Content" Value="{Binding OnContent, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="{x:Null}" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentPresenter" Property="Content" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentPresenter" Property="Content" Value="{Binding OnContent, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentPresenter" Property="Content" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.8" />
                            <Setter Property="Foreground" Value="{DynamicResource ControlHoverTextColorBrush}" />
                            <Setter TargetName="ActiveToggleEllipse" Property="Fill" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ControlHoverTextColorBrush}" />
                            <Setter Property="Opacity" Value="0.8" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ControlTextColorBrush}" />
                            <Setter TargetName="ActiveToggleEllipse" Property="Fill" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToggleEllipse" Property="Fill" Value="{DynamicResource ControlDisabledFillColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisableTextColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.5" />
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisableTextColorBrush}" />
                            <Setter TargetName="ActiveToggleEllipse" Property="Fill" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultUiToggleSwitchStyle}" TargetType="{x:Type controls:ToggleSwitch}" />

</ResourceDictionary>