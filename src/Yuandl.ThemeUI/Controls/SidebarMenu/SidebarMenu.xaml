<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Yuandl ThemeUI. All Rights Reserved.
-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Yuandl.ThemeUI.Controls" 
    xmlns:assist="clr-namespace:Yuandl.ThemeUI.ElementAssist" 
    xmlns:converters="clr-namespace:Yuandl.ThemeUI.Converters" 
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="NavigationViewItemChevronSize">12</system:Double>
    <system:Double x:Key="NavigationViewFluentIconSize">24</system:Double>
    <system:Double x:Key="PaneToggleButtonHeight">40</system:Double>
    <system:Double x:Key="PaneToggleButtonWidth">40</system:Double>
    <Thickness x:Key="PaneToggleButtonThickness">1,1,1,1</Thickness>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />


    <Style x:Key="BasePaneButtonStyle" TargetType="{x:Type controls:Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{StaticResource PaneToggleButtonThickness}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Button}">
                    <Border
                        x:Name="LayoutRoot"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Margin="0"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter
                                x:Name="Icon"
                                Grid.Column="0"
                                Margin="0,0,20,0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Icon}"
                                Focusable="False"
                                RenderTransformOrigin="0.5, 0.5"
                                TextElement.Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter.RenderTransform>
                                    <ScaleTransform x:Name="IconScaleTransform" ScaleX="1.0" ScaleY="1.0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>

                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ControlHoverFillColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlDisabledFillColorBrush}" />
                            <Setter TargetName="Icon" Property="TextElement.Foreground" Value="{DynamicResource ControlDisableTextColorBrush}" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Margin" Value="0" />
                        </Trigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="IconScaleTransform"
                                        Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                        From="1.0"
                                        To="0.85"
                                        Duration="0:0:0.08" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="IconScaleTransform"
                                        Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                        From="0.85"
                                        To="1.0"
                                        Duration="0:0:0.08" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewItemDefaultStyle" TargetType="{x:Type controls:PageViewItem}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorBrush}" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderColorBrush}" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>


    <Style x:Key="DefaultSidebarMenuStyle" TargetType="{x:Type controls:SidebarMenu}">
        <Setter Property="Foreground" Value="{DynamicResource ControlTextColorBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Border.CornerRadius" Value="5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderColorBrush}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value >
                <ControlTemplate TargetType="{x:Type controls:SidebarMenu}">
                    <Border x:Name="PaneGrid" 
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}" 
                            TextElement.Foreground="{TemplateBinding Foreground}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            CornerRadius="{TemplateBinding Border.CornerRadius}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Width="{TemplateBinding Width}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!--  Back and Toggle buttons  -->
                            <Grid Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <controls:Button
                                    x:Name="PART_ToggleButton"
                                    Grid.Row="0"
                                    Margin="0,0,0,5"
                                    Style="{StaticResource BasePaneButtonStyle}"
                                    Visibility="{TemplateBinding IsToggleVisible,
                                    Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <controls:Button.Icon>
                                        <controls:SymbolIcon Symbol="LineHorizontal320" />
                                    </controls:Button.Icon>
                                    <controls:Button.Content>
                                        <TextBlock FontWeight="Medium" Text="{TemplateBinding Title}" />
                                    </controls:Button.Content>
                                </controls:Button>

                                <!--  Auto Suggest Box  -->
                                <ContentPresenter x:Name="AutoSuggestBoxContentPresenter" Grid.Row="1" Margin="0" Content="{TemplateBinding AutoSuggestBox}" />

                                <controls:Button
                                    x:Name="PART_AutoSuggestBoxSymbolButton"
                                    Grid.Row="1"
                                    Margin="0,0,0,6"
                                    Icon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoSuggestBox.Icon}"
                                    Style="{StaticResource BasePaneButtonStyle}"
                                    Visibility="Collapsed" />
                            </Grid>

                            <!--  Menu items  -->
                            <controls:DynamicScrollViewer
                                Grid.Row="1"
                                Margin="0,0,-4,0"
                                Padding="0,0,4,0"
                                CanContentScroll="True"
                                HorizontalScrollBarVisibility="Disabled"
                                VerticalScrollBarVisibility="Auto">
                                <ItemsControl
                                    x:Name="PART_MenuItemsItemsControl"
                                    Grid.Row="0"
                                    Focusable="False"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Margin="0" IsItemsHost="True" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </controls:DynamicScrollViewer>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="PaneStates">
                                <VisualState Name="PaneOpen">
                                    <Storyboard>
                                        <DoubleAnimation
                                        AccelerationRatio="0.4"
                                        Storyboard.TargetName="PaneGrid"
                                        Storyboard.TargetProperty="Width"
                                        From="40"
                                        To="{TemplateBinding Width}"
                                        Duration="0:0:.16" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="PaneCompact">
                                    <Storyboard>
                                        <DoubleAnimation
                                        AccelerationRatio="0.4"
                                        Storyboard.TargetName="PaneGrid"
                                        Storyboard.TargetProperty="Width"
                                        From="{TemplateBinding Width}"
                                        To="40"
                                        Duration="0:0:.16" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="False">
                            <Setter TargetName="PART_AutoSuggestBoxSymbolButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="AutoSuggestBoxContentPresenter" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_ToggleButton" Property="Content" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="AutoSuggestBox" Value="{x:Null}">
                            <Setter TargetName="PART_AutoSuggestBoxSymbolButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter TargetName="PART_ToggleButton" Property="Content" Value="{x:Null}" />
                            <Setter TargetName="PART_ToggleButton" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PageViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="MainBorder"
                            Grid.Row="0"
                            MinWidth="40"
                            MinHeight="40"
                            Margin="0"
                            Padding="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ControlHoverFillColorBrush}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0">
                                    <ContentPresenter
                                        x:Name="IconContentPresenter"
                                        Margin="-1,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Icon}"
                                        Focusable="False"
                                        TextElement.FontSize="16"
                                        TextElement.Foreground="{TemplateBinding Foreground}" />
                                </Grid>

                                <Rectangle x:Name="ActiveRectangle" Grid.Column="0" Width="3" Height="30" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{DynamicResource SystemAccentColorBrush}"  Opacity="0.0" RadiusX="2" RadiusY="2" />

                                <ContentPresenter
                                    x:Name="ElementContentPresenter"
                                    Grid.Column="1"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    TextElement.FontSize="14"
                                    TextElement.Foreground="{TemplateBinding Foreground}" />

                                <ContentPresenter x:Name="PART_InfoBadge" Grid.Column="2" Margin="0" Content="{TemplateBinding InfoBadge}" />

                                <Grid x:Name="PART_ChevronGrid" Grid.Column="3" Width="0" Visibility="Collapsed">
                                    <controls:SymbolIcon
                                        x:Name="ChevronIcon"
                                        Margin="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontSize="{StaticResource NavigationViewItemChevronSize}"
                                        Foreground="{TemplateBinding Foreground}"
                                        RenderTransformOrigin="0.5, 0.5"
                                        Symbol="ChevronDown24">
                                        <controls:SymbolIcon.RenderTransform>
                                            <RotateTransform Angle="0" />
                                        </controls:SymbolIcon.RenderTransform>
                                    </controls:SymbolIcon>
                                </Grid>
                            </Grid>
                        </Border>
                        <ItemsControl x:Name="MenuItemsPresenter" Grid.Row="1" Focusable="False" ItemsSource="{TemplateBinding MenuItems}" KeyboardNavigation.DirectionalNavigation="Contained" Opacity="0.0"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" Visibility="Collapsed">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Margin="0" IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.Resources>
                                <Style BasedOn="{StaticResource NavigationViewItemDefaultStyle}" TargetType="{x:Type controls:PageViewItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type controls:PageViewItem}">
                                                <Border x:Name="MainBorder" Height="40" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="4">
                                                    <Grid Margin="30,0,0,0" HorizontalAlignment="Stretch">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" MinWidth="180" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>

                                                        <Rectangle
                                                            x:Name="ActiveRectangle"
                                                            Grid.Column="0"
                                                            Width="3"
                                                            Height="30"
                                                            Margin="0"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            Fill="{DynamicResource SystemAccentColorBrush}"
                                                            Opacity="0.0"
                                                            RadiusX="2"
                                                            RadiusY="2" />

                                                        <ContentPresenter
                                                            x:Name="IconContentPresenter"
                                                            Grid.Column="1"
                                                            Margin="6,0,3,0"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Content="{TemplateBinding Icon}"
                                                            Focusable="False"
                                                            TextElement.FontSize="18"
                                                            TextElement.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type controls:SidebarMenu}}}"
                                                            Visibility="{TemplateBinding Icon, Converter={StaticResource NullToVisibilityConverter}}" />
                                                        <ContentPresenter
                                                            x:Name="ElementContentPresenter"
                                                            Grid.Column="2"
                                                            Margin="10,0,0,0"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Center"
                                                            Content="{TemplateBinding Content}"
                                                            TextElement.FontSize="14"
                                                            TextElement.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type controls:SidebarMenu}}}" />
                                                        <ContentPresenter Grid.Column="3" Content="{TemplateBinding InfoBadge}" />
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsActive" Value="True">
                                                        <Setter TargetName="ActiveRectangle" Property="Opacity" Value="1.0" />
                                                        <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource ControlItemActiveFillColorBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource ControlHoverFillColorBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource ControlPressedFillColorBrush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ItemsControl.Resources>
                        </ItemsControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="PART_InfoBadge" Property="Grid.Column" Value="2" />
                        </Trigger>
                        <Trigger Property="IsOpen" Value="False">
                            <Setter TargetName="PART_InfoBadge" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_InfoBadge" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_InfoBadge" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>

                        <Trigger Property="InfoBadge" Value="{x:Null}">
                            <Setter TargetName="PART_InfoBadge" Property="Margin" Value="0" />
                            <Setter TargetName="PART_InfoBadge" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="PART_ChevronGrid" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ChevronGrid" Property="Width" Value="40" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="MenuItemsPresenter" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MenuItemsPresenter"
                                            Storyboard.TargetProperty="(ItemsControl.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ChevronIcon"
                                            Storyboard.TargetProperty="(Control.RenderTransform).(RotateTransform.Angle)"
                                            To="-180"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MenuItemsPresenter"
                                            Storyboard.TargetProperty="(ItemsControl.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ChevronIcon"
                                            Storyboard.TargetProperty="(Control.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="ActiveRectangle" Property="Opacity" Value="1.0" />
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource ControlItemActiveFillColorBrush}" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="IconContentPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="IconContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ControlTextColorBrushPointerOver}" />
                                <Setter TargetName="ElementContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ControlTextColorBrushPointerOver}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultSidebarMenuStyle}" TargetType="{x:Type controls:SidebarMenu}" />
</ResourceDictionary>