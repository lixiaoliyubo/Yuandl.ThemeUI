<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Yuandl ThemeUI. All Rights Reserved.
-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Yuandl.ThemeUI.Controls"
    xmlns:converters="clr-namespace:Yuandl.ThemeUI.Converters"
    xmlns:assist="clr-namespace:Yuandl.ThemeUI.ElementAssist">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:BorderClipConverter x:Key="BorderClipConverter" />
    <converters:VisibilityEnumToBoolConverter x:Key="VisibilityEnumToBoolConverter" />

    <Thickness x:Key="BorderThemeThickness">1</Thickness>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                     SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     StrokeDashArray="1 2"
                     StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" 
                            Padding="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch">
                            <RepeatButton  x:Name="ScrollDecreaseButton" 
                                            Command="ScrollBar.LineLeftCommand"
                                            IsTabStop="False" Delay="50" Interval="100" 
                                            >
                                <FrameworkElement.Style>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type controls:TabControl}}}" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Border Name="border" BorderBrush="{DynamicResource ControlElevationBorderBrush}" BorderThickness="1" CornerRadius="0" SnapsToDevicePixels="True" Background="{DynamicResource ControlFillColorBrush}">
                                                        <ContentPresenter Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Focusable="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlElevationBorderBrush}" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlBorderColorBrush}" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.6" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </FrameworkElement.Style>
                                <controls:SymbolIcon Symbol="CaretLeft24"/>
                            </RepeatButton>
                        </Border>
                        <ScrollContentPresenter x:Name="ScrollContentPresenter"  Grid.Column="1"/>
                        <Border 
                            Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" 
                            Grid.Column="2"
                            Padding="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch">
                            <RepeatButton x:Name="ScrollIncreaseButton" 
                                            Command="ScrollBar.LineRightCommand"
                                            IsTabStop="False" 
                                            Delay="50" 
                                            Interval="100" 
                                            >
                                <FrameworkElement.Style>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="BorderThickness" Value="1" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type controls:TabControl}}}" />
                                        <Setter Property="Padding" Value="1" />
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Border Name="border" BorderBrush="{DynamicResource ControlElevationBorderBrush}" BorderThickness="1" CornerRadius="0" SnapsToDevicePixels="True" Background="{DynamicResource ControlFillColorBrush}">
                                                        <ContentPresenter Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Focusable="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlElevationBorderBrush}" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlBorderColorBrush}" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </FrameworkElement.Style>
                                <controls:SymbolIcon  Symbol="CaretRight24"/>
                            </RepeatButton>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultTabControlBase" TargetType="{x:Type controls:TabControl}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderColorBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="BorderThickness" Value="{StaticResource BorderThemeThickness}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TabControl}">
                    <DockPanel KeyboardNavigation.TabNavigation="Local">
                        <Grid
                            x:Name="PART_HeaderZone"  
                            VerticalAlignment="Stretch"
                            Panel.ZIndex="1"
                            HorizontalAlignment="Stretch"
                            assist:ElevationAssist.Elevation="{TemplateBinding assist:ElevationAssist.Elevation}"
                            DockPanel.Dock="Top"
                            Focusable="False">
                            <ScrollViewer  
                                HorizontalScrollBarVisibility="Auto" 
                                VerticalScrollBarVisibility="Disabled" 
                                HorizontalAlignment="Left"
                                Style="{StaticResource TabScrollViewerStyle}"
                                ScrollViewer.PanningMode="HorizontalOnly"
                                >
                                <StackPanel>
                                    <UniformGrid x:Name="CenteredHeaderPanel"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Focusable="False" IsItemsHost="True"
                                       KeyboardNavigation.TabIndex="1"
                                       Rows="1" />
                                    <VirtualizingStackPanel x:Name="HeaderPanel"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Background="{DynamicResource ControlFillColorBrush}" IsVirtualizing="{TemplateBinding VirtualizingPanel.IsVirtualizing}" VirtualizationMode="{TemplateBinding VirtualizingPanel.VirtualizationMode}"
                                          Focusable="False" IsItemsHost="True"
                                          KeyboardNavigation.TabIndex="1"
                                          Orientation="Horizontal" />
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <Border x:Name="PART_BorderSelectedContent"
                                Margin="0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Panel.ZIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Panel.ZIndex)}"
                            Background="{DynamicResource ControlFillSecondaryColorBrush}"
                            Focusable="False">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                Margin="0"
                                ContentSource="SelectedContent" 
                                ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Stretch">
                            <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Center" />
                                <Condition Property="HasUniformTabWidth" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Center" />
                                <Condition Property="HasUniformTabWidth" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Left" />
                                <Condition Property="HasUniformTabWidth" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Left" />
                                <Condition Property="HasUniformTabWidth" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Right" />
                                <Condition Property="HasUniformTabWidth" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HorizontalContentAlignment" Value="Right" />
                                <Condition Property="HasUniformTabWidth" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="CenteredHeaderPanel" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="PART_HeaderZone" Property="DockPanel.Dock" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="CenteredHeaderPanel" Property="Columns" Value="1" />
                            <Setter TargetName="CenteredHeaderPanel" Property="Rows" Value="0" />
                            <Setter TargetName="PART_HeaderZone" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="CenteredHeaderPanel" Property="Columns" Value="1" />
                            <Setter TargetName="CenteredHeaderPanel" Property="Rows" Value="0" />
                            <Setter TargetName="PART_HeaderZone" Property="DockPanel.Dock" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowCloseButton" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Appearance" Value="Custom" />
        <Setter Property="assist:ElevationAssist.Elevation" Value="Dp4" />
        <Setter Property="HasUniformTabWidth" Value="False" />
    </Style>

    <Style x:Key="DefaultTabControlStyle"
         TargetType="{x:Type controls:TabControl}"
         BasedOn="{StaticResource DefaultTabControlBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="assist:ColorZoneAssist.Background" Value="Transparent" />
        <Setter Property="assist:ElevationAssist.Elevation" Value="Dp0" />
    </Style>

    <Style x:Key="DefaultUniformTabControlStyle"
         TargetType="{x:Type controls:TabControl}"
         BasedOn="{StaticResource DefaultTabControlStyle}">
        <Setter Property="HasUniformTabWidth" Value="True" />
    </Style>

    <Style x:Key="DefaultFilledUniformTabControlStyle"
         TargetType="{x:Type controls:TabControl}"
         BasedOn="{StaticResource DefaultFilledTabControl}">
        <Setter Property="HasUniformTabWidth" Value="True" />
    </Style>


    <Style TargetType="{x:Type controls:TabControl}" BasedOn="{StaticResource DefaultTabControlStyle}" />

</ResourceDictionary>
