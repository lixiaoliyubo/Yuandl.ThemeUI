<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Yuandl ThemeUI. All Rights Reserved.
-->
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Yuandl.ThemeUI.Controls"
    xmlns:converters="clr-namespace:Yuandl.ThemeUI.Converters"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <converters:BrushRoundConverter x:Key="BrushRoundConverter" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <ContextMenu x:Key="TabItemMenu">
        <MenuItem Header="Close" Command="{x:Static controls:ControlCommands.Close}" 
              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"/>
        <MenuItem Header="Close All" Command="{x:Static controls:ControlCommands.CloseAll}" 
              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"/>
        <MenuItem Header="Close Others" Command="{x:Static controls:ControlCommands.CloseOther}" 
              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"/>
    </ContextMenu>

    <Style x:Key="DefaultUiTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource ControlTextColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderColorBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="10" />
        <Setter Property="Border.CornerRadius" Value="0" />
        <Setter Property="MinWidth" Value="130" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="0">
                        </Border>

                        <controls:Ripple 
                            x:Name="PATH_Ripple"
                            Padding="{TemplateBinding Padding}"
                            Margin="0,0,0,0" VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                            Focusable="False"
                            RecognizesAccessKey="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </controls:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SystemAccentColorBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlItemActiveBorderColorBrush}"/>
                            <Setter Property="Panel.ZIndex" Value="3"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SystemAccentColorPrimaryBrush}"/>
                            <Setter Property="Opacity" TargetName="mainBorder" Value=".7"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="mainBorder" Value=".7"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource ControlDisabledFillColorBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlDisabledBorderColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisableTextColorBrush}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,.5"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,.5"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value=".5,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top">
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value=".5,0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultBorderTabItemStyle" TargetType="{x:Type controls:TabItem}" BasedOn="{StaticResource DefaultUiTabItemStyle}">
        <Setter Property="Padding" Value="8,7" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinWidth" Value="{Binding ItemWidth, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        <Setter Property="MinHeight" Value="{Binding ItemHeight, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        <Setter Property="Menu" Value="{StaticResource TabItemMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true" ContextMenu="{TemplateBinding Menu}">
                        <Border x:Name="mainBorder" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,2" Margin="0">
                        </Border>

                        <controls:Ripple 
                            x:Name="PATH_Ripple"
                            Padding="{TemplateBinding Padding}"
                            Margin="0,0,0,0" VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                            Focusable="False"
                            RecognizesAccessKey="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </controls:Ripple>
                        <Button 
                            x:Name="PATH_Close" 
                            HorizontalAlignment="Right" 
                            Focusable="False" 
                            Background="Transparent" 
                            Width="28"
                            Padding="0" BorderThickness="0"
                            Command="controls:ControlCommands.Close"
                            CommandParameter="{Binding Path=.,RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{TemplateBinding ShowCloseButton,  Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Path 
                                x:Name="PATH_ClosePath"
                                Fill="{TemplateBinding Foreground}"
                                StrokeThickness="1.5"
                                Stroke="{TemplateBinding Foreground}"
                                Width="8" Height="8"
                                Data="M 0,0 L 8,8 M 8,0 L 0,8"/>
                        </Button>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorBrush}"/>
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource SystemAccentColorBrush}"/>
                            <Setter Property="Panel.ZIndex" Value="3"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorPrimaryBrush}"/>
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource SystemAccentColorPrimaryBrush}"/>
                            <Setter Property="Opacity" TargetName="mainBorder" Value=".7"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="mainBorder" Value=".7"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource ControlDisabledFillColorBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlDisabledBorderColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisableTextColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultTabItemStyle" TargetType="{x:Type controls:TabItem}" BasedOn="{StaticResource DefaultUiTabItemStyle}">
        <Setter Property="Padding" Value="8,7" />
        <Setter Property="MinWidth" Value="{Binding ItemWidth, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        <Setter Property="MinHeight" Value="{Binding ItemHeight, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        <Setter Property="Menu" Value="{StaticResource TabItemMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true" ContextMenu="{TemplateBinding Menu}">
                        <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="0">
                        </Border>

                        <controls:Ripple 
                            x:Name="PATH_Ripple"
                            Padding="{TemplateBinding Padding}"
                            Margin="0,0,0,0" VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                            Focusable="False"
                            RecognizesAccessKey="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </controls:Ripple>
                        <Button 
                            x:Name="PATH_Close" 
                            HorizontalAlignment="Right" 
                            Focusable="False" 
                            Background="Transparent" 
                            Width="28"
                            Padding="0" BorderThickness="0"
                            Command="controls:ControlCommands.Close"
                            CommandParameter="{Binding Path=.,RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{TemplateBinding ShowCloseButton,  Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Path 
                                x:Name="PATH_ClosePath"
                                Fill="{TemplateBinding Foreground}"
                                StrokeThickness="1.5"
                                Stroke="{TemplateBinding Foreground}"
                                Width="8" Height="8"
                                Data="M 0,0 L 8,8 M 8,0 L 0,8"/>
                        </Button>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SystemAccentColorBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlItemActiveBorderColorBrush}"/>
                            <Setter Property="Panel.ZIndex" Value="3"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource SystemAccentColorPrimaryBrush}"/>
                            <Setter Property="Opacity" TargetName="mainBorder" Value=".7"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="mainBorder" Value=".7"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource ControlDisabledFillColorBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlDisabledBorderColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisableTextColorBrush}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,.5"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,.5"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value=".5,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top">
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value=".5,0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style BasedOn="{StaticResource DefaultUiTabItemStyle}" TargetType="{x:Type TabItem}"/>
    <Style BasedOn="{StaticResource DefaultTabItemStyle}" TargetType="{x:Type controls:TabItem}"/>
</ResourceDictionary>