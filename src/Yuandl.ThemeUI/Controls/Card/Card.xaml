<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Yuandl ThemeUI. All Rights Reserved.
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Yuandl.ThemeUI.Controls"
    xmlns:assist="clr-namespace:Yuandl.ThemeUI.ElementAssist"
    xmlns:converters="clr-namespace:Yuandl.ThemeUI.Converters">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:ShadowConverter x:Key="ShadowConverter" />
    <converters:ShadowOpacityMaskConverter x:Key="ShadowOpacityMaskConverter" />

    <Thickness x:Key="CardPadding">10,10,10,10</Thickness>
    <Thickness x:Key="CardBorderThemeThickness">1</Thickness>
    <Style TargetType="{x:Type controls:Card}">
        <Setter Property="Background" Value="{DynamicResource ControlFillColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ControlTextColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderColorBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource CardBorderThemeThickness}" />
        <Setter Property="Padding" Value="{StaticResource CardPadding}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Card}">
                    <Grid Background="Transparent">
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(assist:ShadowAssist.CacheMode)}">
                            <Border 
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Card}}, Path=(assist:CommonAssist.CornerRadius)}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(assist:ElevationAssist.Elevation), Converter={x:Static converters:ShadowConverter.Instance}}" 
                                />
                        </AdornerDecorator>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" x:Name="HeaderBorder" Padding="{TemplateBinding Padding}" BorderThickness="0,0,0,1" Visibility="{TemplateBinding HasHeader, Converter={StaticResource BooleanToVisibilityConverter}}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" />
                            </Border>
                            <ContentPresenter Grid.Row="1" x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border Grid.Row="2" x:Name="FooterBorder"  Padding="{TemplateBinding Padding}" BorderThickness="0,1,0,0" Visibility="{TemplateBinding HasFooter, Converter={StaticResource BooleanToVisibilityConverter}}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter ContentSource="Footer" ContentTemplate="{TemplateBinding FooterTemplate}" ContentTemplateSelector="{TemplateBinding FooterTemplateSelector}" ContentStringFormat="{TemplateBinding FooterStringFormat}" />
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasFooter" Value="True">
                            <Setter TargetName="FooterBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasHeader" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
