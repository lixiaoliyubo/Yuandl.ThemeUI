<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Yuandl ThemeUI. All Rights Reserved.
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Yuandl.ThemeUI.Controls"
    xmlns:converters="clr-namespace:Yuandl.ThemeUI.Converters"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <converters:FallbackBrushConverter x:Key="FallbackBrushConverter" />

    <Color x:Key="FallbackColor">#FFFF0000</Color>

    <Thickness x:Key="CheckBoxPadding">11,5,11,6</Thickness>
    <Thickness x:Key="CheckBoxBorderThemeThickness">1</Thickness>
    <Thickness x:Key="CheckBoxContentMargin">8,0,0,0</Thickness>
    <system:Double x:Key="CheckBoxIconSize">14</system:Double>
    <system:Double x:Key="CheckBoxHeight">22</system:Double>
    <system:Double x:Key="CheckBoxWidth">22</system:Double>

    <Style x:Key="DefaultCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="Foreground" Value="{DynamicResource ControlTextColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderColorBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource CheckBoxBorderThemeThickness}" />
        <Setter Property="Padding" Value="{StaticResource CheckBoxPadding}" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardCheckedTrue">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardCheckedFalse">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardLineTrue">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="linepath">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardLineFalse">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeDashOffset)" Storyboard.TargetName="linepath">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="ControlBorderIconPresenter"
                                Width="{StaticResource CheckBoxHeight}"
                                Height="{StaticResource CheckBoxWidth}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                                <Border
                                    x:Name="StrokeBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding Border.CornerRadius}">
                                    <Grid>
                                        <Path FlowDirection="LeftToRight" UseLayoutRounding="True" x:Name="linepath"  StrokeDashOffset="8" StrokeDashArray="8,8" Width="12" Height="2" Data="M 0,0 H 1" StrokeThickness="2"  Stretch="Uniform" Stroke="{DynamicResource TextFillColorPrimaryBrush}" />
                                        <Path FlowDirection="LeftToRight" UseLayoutRounding="True" x:Name="path" StrokeDashOffset="8" StrokeDashArray="8,8" Width="12" Height="12" Data="M 0,2 3,5 8,0" StrokeThickness="2" Stretch="Uniform" Stroke="{DynamicResource TextFillColorPrimaryBrush}" />
                                        <Rectangle x:Name="indeterminateMark" RadiusX="2" RadiusY="2" Fill="{DynamicResource PrimaryBrush}" Margin="2" Opacity="0" />
                                    </Grid>
                                </Border>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Margin="{StaticResource CheckBoxContentMargin}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
                            <Setter Property="MinWidth" Value="30" />
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
                            <Setter Property="MinWidth" Value="30" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardLineTrue}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardLineFalse}" />
                            </Trigger.ExitActions>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource SystemAccentColorPrimaryBrush}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedTrue}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedFalse}" />
                            </Trigger.ExitActions>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource SystemAccentColorBrush}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="StrokeBorder" Property="Background" Value="{DynamicResource ControlHoverFillColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource SystemAccentSecondaryColorBrush}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource SystemAccentSecondaryColorBrush}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource ControlHoverFillColorBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource ControlDisabledFillColorBrush}" />
                            <Setter TargetName="path" Property="Stroke" Value="{DynamicResource ControlDisabledBorderColorBrush}" />
                            <Setter TargetName="linepath" Property="Stroke" Value="{DynamicResource ControlDisabledBorderColorBrush}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource ControlDisabledBorderColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisableTextColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="{x:Type CheckBox}" />

</ResourceDictionary>

