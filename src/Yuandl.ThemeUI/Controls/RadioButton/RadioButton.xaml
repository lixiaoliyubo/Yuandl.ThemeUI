<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Yuandl ThemeUI. All Rights Reserved.
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <system:Double x:Key="RadioButtonCheckGlyphSize">12</system:Double>
    <system:Double x:Key="RadioButtonOuterEllipseSize">20</system:Double>
    <system:Double x:Key="RadioButtonStrokeThickness">1</system:Double>
    <Thickness x:Key="RadioButtonPadding">10,6</Thickness>
    <Thickness x:Key="RadioButtonBorderThemeThickness">0</Thickness>

    <Style x:Key="DefaultRadioGroupStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ControlTextColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource RadioButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="{StaticResource RadioButtonPadding}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ControlDisabledFillColorBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlDisabledBorderColorBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ControlDisableTextColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.5" />
                            <Setter Property="Background" Value="{DynamicResource SystemAccentColorPrimaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlDisabledBorderColorBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ControlDisableTextColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource SystemAccentColorBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentControlElevationBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ControlHoverFillColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource SystemAccentSecondaryColorBrush}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ControlPressedFillColorBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlPressedBorderColorBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ControlPressedTextColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource SystemAccentTertiaryColorBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <Setter Property="Background" Value="{DynamicResource SystemAccentColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ControlTextColorBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="{StaticResource RadioButtonPadding}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Height="32" VerticalAlignment="Top">
                            <Ellipse
                                x:Name="OuterEllipse"
                                Width="{StaticResource RadioButtonOuterEllipseSize}"
                                Height="{StaticResource RadioButtonOuterEllipseSize}"
                                Fill="{DynamicResource ControlFillColorBrush}"
                                Stroke="{DynamicResource ControlBorderColorBrush}"
                                StrokeThickness="{StaticResource RadioButtonStrokeThickness}"
                                UseLayoutRounding="False" />
                            <Ellipse
                                x:Name="CheckOuterEllipse"
                                Width="{StaticResource RadioButtonOuterEllipseSize}"
                                Height="{StaticResource RadioButtonOuterEllipseSize}"
                                Fill="{TemplateBinding Background}"
                                Opacity="0"
                                Stroke="{TemplateBinding Background}"
                                StrokeThickness="{StaticResource RadioButtonStrokeThickness}"
                                UseLayoutRounding="False" />
                            <Ellipse
                                x:Name="CheckGlyph"
                                Width="{StaticResource RadioButtonCheckGlyphSize}"
                                Height="{StaticResource RadioButtonCheckGlyphSize}"
                                Fill="{DynamicResource TextFillColorPrimaryBrush}"
                                Opacity="0"
                                Stroke="{DynamicResource CircleElevationBorderBrush}"
                                UseLayoutRounding="False">
                                <Ellipse.LayoutTransform>
                                    <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                                </Ellipse.LayoutTransform>
                            </Ellipse>
                            <Border
                                x:Name="PressedCheckGlyph"
                                Width="4"
                                Height="4"
                                Background="{DynamicResource ControlFillColorBrush}"
                                BorderBrush="{DynamicResource CircleElevationBorderBrush}"
                                CornerRadius="6"
                                Opacity="0"
                                UseLayoutRounding="False" />

                        </Grid>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1.0" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource ControlAltFillColorQuarternaryBrush}" />
                            <Setter TargetName="OuterEllipse" Property="Stroke" Value="{DynamicResource AccentFillColorDisabledBrush}" />
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1.0" />
                            <Setter TargetName="OuterEllipse" Property="Opacity" Value="0.0" />
                            <Setter TargetName="CheckOuterEllipse" Property="Opacity" Value="1.0" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ControlHoverTextColorBrush}" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource ControlHoverFillColorBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource ControlHoverFillColorBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Stroke" Value="{DynamicResource ControlHoverBorderColorBrush}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Fill" Value="{DynamicResource ControlHoverFillColorBrush}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Stroke" Value="{DynamicResource ControlHoverBorderColorBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckOuterEllipse" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource ControlBorderColorBrush}" />
                            <Setter TargetName="PressedCheckGlyph" Property="Background" Value="{DynamicResource SystemAccentSecondaryColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisableTextColorBrush}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Fill" Value="{DynamicResource ControlDisabledFillColorBrush}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Stroke" Value="{DynamicResource ControlDisabledBorderColorBrush}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Opacity" Value="0.7" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource ControlDisabledFillColorBrush}" />
                            <Setter TargetName="OuterEllipse" Property="Stroke" Value="{DynamicResource ControlDisabledBorderColorBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource ControlDisabledFillColorBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Stroke" Value="{DynamicResource ControlDisabledBorderColorBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="0.7" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisableTextColorBrush}" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                            <Setter TargetName="OuterEllipse" Property="Stroke" Value="{DynamicResource ControlDisabledBorderColorBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="0.7" />
                            <Setter TargetName="CheckOuterEllipse" Property="Opacity" Value="0.7" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource SystemAccentTertiaryColorBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource ControlTextSecondaryColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ControlPressedTextColorBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultRadioButtonStyle}" TargetType="{x:Type RadioButton}" />

</ResourceDictionary>
