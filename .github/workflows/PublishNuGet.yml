name: WPF Multi-Target Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  BUILD_CONFIGURATION: 'Release'
  SAMPLE_PROJECT: 'src/Yuandl.ThemeUI.Sample/Yuandl.ThemeUI.Sample.csproj'
  UI_LIB_PROJECT: 'src/Yuandl.ThemeUI/Yuandl.ThemeUI.csproj'

permissions:
  contents: write
  packages: write

jobs:
  build-components:
    runs-on: windows-latest
    strategy:
      matrix:
        target_framework: ['net462', 'net48', 'net6.0-windows', 'net8.0-windows', 'net9.0-windows']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            8.0.x

      - name: Install .NET Framework Targets
        run: |
          choco install netfx-4.8-devpack -y
        shell: powershell
        if: contains(matrix.target_framework, 'net4')

      - name: Check .NET Versions
        run: dotnet --list-sdks

      - name: Get Library Version
        id: get_version
        shell: powershell
        run: |
          $version = (Select-String -Path ${{ env.UI_LIB_PROJECT }} -Pattern '<AssemblyVersion>(.*?)</AssemblyVersion>').Matches.Groups[1].Value
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Build UI Library
        shell: pwsh
        run: |
          dotnet build ${{ env.UI_LIB_PROJECT }} -f ${{ matrix.target_framework }} --configuration ${{ env.BUILD_CONFIGURATION }}


  publish-sample:
    runs-on: windows-latest
    needs: build-components
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore Dependencies
        run: dotnet restore ${{ env.SAMPLE_PROJECT }}

      - name: Publish Sample App
        run: |
          dotnet publish ${{ env.SAMPLE_PROJECT }} `
            --configuration ${{ env.BUILD_CONFIGURATION }} `
            --output ./artifacts `
            --runtime win-x64 `
            --self-contained true `
            -p:PublishSingleFile=true `
            -p:TargetFramework=net8.0-windows `
            -p:IncludeAllContentForSelfExtract=true

      - name: Create Install Package
        shell: powershell
        run: |
          $packageName = "ThemeUISample_${{ steps.get_version.outputs.version }}.zip"
          Compress-Archive -Path ./artifacts/* -DestinationPath $packageName
          echo "SAMPLE_PACKAGE=$packageName" >> $env:GITHUB_ENV

      - name: Generate Release Notes
        id: changelog
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          git log --since="$(git log -1 --merges --pretty=format:%cd --date=iso)" \
            --pretty=format:"### %s%n**Author**: %an%n**Date**: %ad%n---%n" \
            --date=format-local:'%Y-%m-%d %H:%M' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 修改重点：仅保留自动生成的Source code压缩包
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Theme UI v${{ steps.get_version.outputs.version }}
          draft: true
          generate_release_notes: true
          body: |
            ${{ steps.changelog.outputs.RELEASE_NOTES }}

            **安装包包含以下内容**：
            - 主程序文件: `YuandlThemeUl.Sample.exe`
            - 支持从 Windows XP 到 Windows 11 的兼容组件
            - 自动运行环境检查工具
