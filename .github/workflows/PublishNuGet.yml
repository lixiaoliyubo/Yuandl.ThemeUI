name: Auto Release

on:
  push:
    branches:
      - master

jobs:
  create-release:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest version and bump
        id: version
        run: |
          $latest = git describe --tags --abbrev=0 2>$null
          if (-not $latest) {
            $version = "2.0.0"
          } else {
            $latest = $latest -replace 'v',''
            $parts = $latest.Split('.')
            $parts[2] = [int]$parts[2] + 1
            $version = $parts -join '.'
          }
          echo "NEW_VERSION=$version" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a v${{ steps.version.outputs.NEW_VERSION }} -m "Release v${{ steps.version.outputs.NEW_VERSION }}"
          git push origin v${{ steps.version.outputs.NEW_VERSION }}
        shell: pwsh

      - name: Get commit messages
        id: get_commits
        run: |
          $messages = git log --format="- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD
          $messages = $messages -join "`n"
          echo "COMMIT_MESSAGES<<EOF" >> $env:GITHUB_OUTPUT
          echo "$messages" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.NEW_VERSION }}
          name: Create stable version for v${{ steps.version.outputs.NEW_VERSION }}
          draft: false
          body: ${{ steps.get_commits.outputs.COMMIT_MESSAGES }}
          token: ${{ secrets.GITHUB_TOKEN }}
